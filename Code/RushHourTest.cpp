#include <iostream>
#include <queue>
#include <cassert>
#include <map>
#include <cstdlib>

#include "Generator.h"
#include "Timer.h"

#define HPUZZLE 1

std::string filepath = "./data/files/puzzle.txt" ;

int main(int argc, char** argv) {

    std::string autoGenerated = "data/files/generated_gs.txt" ;
    
    if (argc == 2)
        if (atoi(argv[1]))
            filepath = autoGenerated;
        else 
            filepath = argv[1] ;

    Walnut::Timer timer;

#if HPUZZLE
    Generator::HardestPuzzle(autoGenerated);
    filepath = autoGenerated;
#endif

    GameSituation initSituation(filepath) ;
    //std::cout << "Mask: " << initSituation.GetMask() << std::endl;

    const std::vector<GameSituation>& path = Graph::Path(initSituation);
    float elapsedTime = timer.ElapsedMillis() / 1000.0f;
    std::cout << "Elapsed Time: " << elapsedTime << "s" << std::endl;
    std::cout << "Needs " << path.size() - 1 << " moves to be resolved !" << std::endl;

    return 0;
} 
